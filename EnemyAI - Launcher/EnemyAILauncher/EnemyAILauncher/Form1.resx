<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        zdcWAAAAAElFTkSuQmCC
</value>
  </data>
</root>